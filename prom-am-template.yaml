apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: prometheus
  annotations:
    "openshift.io/display-name": Prometheus
    description: |
      Prometheus and Alert Manager template for open faas.
    iconClass: icon-cogs
    tags: "monitoring,prometheus, alertmanager,time-series"
parameters:
- description: The namespace to instantiate prometheus under.
  name: CP_NAMESPACE
  required: true
- description: The location of the prometheus image
  name: IMAGE_PROMETHEUS
  value: prom/prometheus
  #openshift/prometheus:v2.0.0
- description: The location of the alertmanager image
  name: IMAGE_ALERTMANAGER
  value: prom/alertmanager
objects:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    labels:
      app: prometheus
    name: prometheus
    namespace: "${CP_NAMESPACE}"
  data:
    prometheus.rules: |
      groups:
      - name: openfaas
        rules:
        - alert: service_down
          expr: up == 0
        - alert: APIHighInvocationRate
          expr: sum(rate(gateway_function_invocation_total{code="503"}[5000s])) BY (function_name)
            > 0
          for: 5s
          labels:
            service: gateway
            severity: major
            value: '{{$value}}'
          annotations:
            description: High invocation total on {{ $labels.instance }}
            summary: High invocation total on {{ $labels.instance }}
    prometheus.yml: |
      global:
        scrape_interval:     15s
        evaluation_interval: 15s
        external_labels:
            monitor: 'faas-monitor'
      rule_files:
        - 'prometheus.rules'

      alerting:
        alertmanagers:
        - scheme: http
          static_configs:
          - targets:
            - "localhost:9093"

      scrape_configs:
        - job_name: 'prometheus'
          scrape_interval: 5s
          static_configs:
            - targets: ['localhost:9090']
        - job_name: "gateway"
          scrape_interval: 5s
          dns_sd_configs:
            - names: ['gateway']
              port: 8080
              type: A
              refresh_interval: 5s

- apiVersion: v1
  kind: ConfigMap
  metadata:
    labels:
      app: prometheus
    name: prometheus-alerts
    namespace: "${CP_NAMESPACE}"
  data:
    alertmanager.yml: |
      route:
        group_by: ['alertname', 'cluster', 'service']
        group_wait: 5s
        group_interval: 10s
        repeat_interval: 30s
        receiver: scale-up
        routes:
        - match:
            service: gateway
            receiver: scale-up
            severity: major
      inhibit_rules:
      - source_match:
          severity: 'critical'
        target_match:
          severity: 'warning'
        equal: ['alertname', 'cluster', 'service']
      receivers:
      - name: 'scale-up'
        webhook_configs:
          - url: http://gateway:8080/system/alert
            send_resolved: true
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: prometheus
    name: prometheus
    namespace: "${CP_NAMESPACE}"
  spec:
    to:
      name: prometheus
    port:
      targetPort: prometheus-http
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
    labels:
      app: prometheus
      name: prometheus
    name: prometheus
    namespace: "${CP_NAMESPACE}"
  spec:
    ports:
    - name: prometheus-http
      port: 9090
      protocol: TCP
      targetPort: 9090
    selector:
      app: prometheus
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
    labels:
      app: prometheus
      name: alertmanager
    name: alertmanager
    namespace: "${CP_NAMESPACE}"
  spec:
    ports:
    - name: alertmanager-http
      port: 9093
      protocol: TCP
      targetPort: 9093
    selector:
      app: prometheus
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: prometheus
    name: prometheus
    namespace: "${CP_NAMESPACE}"
  spec:
    replicas: 1
    strategy:
      type: Rolling
    selector:
      app: prometheus
    template:
      metadata:
        labels:
          app: prometheus
        name: prometheus
      spec:
        serviceAccountName: faas-controller
        containers:
        - name: prometheus
          resources:
            limits:
              cpu: "400m"
              memory: "2048Mi"
          ports:
          - containerPort: 9090
            name: prometheus
          args:
          - --storage.tsdb.retention=6h
          - --storage.tsdb.min-block-duration=2m
          - --config.file=/etc/prometheus/prometheus.yml
          #- --web.listen-address=localhost:9090
          - --web.enable-lifecycle
          image: ${IMAGE_PROMETHEUS}
          imagePullPolicy: IfNotPresent
          volumeMounts:
          - mountPath: /etc/prometheus
            name: prometheus-config
          - mountPath: /prometheus
            name: prometheus-data

        - name: alertmanager
          args:
          - --config.file=/etc/alertmanager/alertmanager.yml
          - --storage.path=/alertmanager/data
          image: ${IMAGE_ALERTMANAGER}
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: "200m"
              memory: "200Mi"
          ports:
          - containerPort: 9093
            name: web
          volumeMounts:
          - mountPath: /etc/alertmanager
            name: alertmanager-config
          - mountPath: /alertmanager
            name: alertmanager-data
        restartPolicy: Always
        volumes:
        - name: prometheus-config
          configMap:
            defaultMode: 420
            name: prometheus
        - name: prometheus-data
          emptyDir: {}
        - name: alertmanager-data
          emptyDir: {}
        - name: alertmanager-config
          configMap:
            defaultMode: 420
            name: prometheus-alerts
